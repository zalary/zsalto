type netsuite.opportunity {
  annotations {
    hidden_string source {
    }
  }
  netsuite.nullField nullFieldList {
  }
  netsuite.recordRef customForm {
  }
  netsuite.currency currency {
    isReference = true
  }
  number estimatedBudget {
  }
  netsuite.recordRef entity {
  }
  netsuite.job job {
    isReference = true
  }
  string title {
  }
  string tranId {
  }
  netsuite.recordRef entityTaxRegNum {
  }
  string taxPointDate {
  }
  number oneTime {
  }
  number recurWeekly {
  }
  number recurMonthly {
  }
  number recurQuarterly {
  }
  number recurAnnually {
  }
  string source {
  }
  netsuite.recordRef salesRep {
  }
  string contribPct {
  }
  netsuite.partner partner {
    isReference = true
  }
  netsuite.recordRef salesGroup {
  }
  boolean syncSalesTeams {
  }
  netsuite.leadSource leadSource {
    isReference = true
  }
  netsuite.recordRef entityStatus {
  }
  number probability {
  }
  string tranDate {
  }
  string expectedCloseDate {
  }
  number daysOpen {
  }
  netsuite.recordRef forecastType {
  }
  string currencyName {
  }
  number exchangeRate {
  }
  number projectedTotal {
  }
  number rangeLow {
  }
  number rangeHigh {
  }
  number projAltSalesAmt {
  }
  number altSalesRangeLow {
  }
  number altSalesRangeHigh {
  }
  number weightedTotal {
  }
  string actionItem {
  }
  netsuite.winLossReason winLossReason {
    isReference = true
  }
  string memo {
  }
  number taxTotal {
  }
  boolean isBudgetApproved {
  }
  number tax2Total {
  }
  netsuite.recordRef salesReadiness {
  }
  number totalCostEstimate {
  }
  netsuite.recordRef buyingTimeFrame {
  }
  number estGrossProfit {
  }
  netsuite.recordRef buyingReason {
  }
  number estGrossProfitPercent {
  }
  netsuite.address billingAddress {
  }
  netsuite.recordRef billAddressList {
  }
  netsuite.address shippingAddress {
  }
  boolean shipIsResidential {
  }
  netsuite.recordRef shipAddressList {
  }
  netsuite.classification class {
    isReference = true
  }
  string closeDate {
  }
  netsuite.nexus nexus {
    isReference = true
  }
  netsuite.recordRef subsidiaryTaxRegNum {
  }
  boolean taxRegOverride {
  }
  boolean taxDetailsOverride {
  }
  netsuite.department department {
    isReference = true
  }
  netsuite.location location {
    isReference = true
  }
  netsuite.subsidiary subsidiary {
    isReference = true
  }
  string status {
  }
  string vatRegNum {
  }
  boolean syncPartnerTeams {
  }
  netsuite.opportunitySalesTeamList salesTeamList {
  }
  netsuite.opportunityPartnersList partnersList {
  }
  netsuite.opportunityItemList itemList {
  }
  netsuite.opportunityCompetitorsList competitorsList {
  }
  netsuite.accountingBookDetailList accountingBookDetailList {
  }
  netsuite.taxDetailsList taxDetailsList {
  }
  netsuite.customFieldList customFieldList {
  }
  serviceid internalId {
    isAttribute = true
    _hidden_value = true
  }
  string externalId {
    isAttribute = true
  }
}
