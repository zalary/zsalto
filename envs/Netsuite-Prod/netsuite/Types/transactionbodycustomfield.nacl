type netsuite.transactionbodycustomfield {
  serviceid scriptid {
    _required = true
    isAttribute = true
    _restriction = {
      regex = "^custbody[0-9a-z_]+"
    }
  }
  netsuite.generic_customfield_fieldtype fieldtype {
    _required = true
  }
  string label {
    _required = true
  }
  string selectrecordtype {
  }
  boolean applyformatting {
  }
  boolean defaultchecked {
  }
  string defaultselection {
  }
  string defaultvalue {
  }
  string description {
  }
  netsuite.generic_customfield_displaytype displaytype {
  }
  netsuite.generic_customfield_dynamicdefault dynamicdefault {
  }
  string help {
  }
  string linktext {
  }
  string minvalue {
  }
  string maxvalue {
  }
  boolean storevalue {
  }
  netsuite.generic_accesslevel_searchlevel accesslevel {
  }
  boolean checkspelling {
  }
  boolean encryptatrest {
  }
  number displayheight {
  }
  number displaywidth {
  }
  boolean globalsearch {
  }
  boolean isformula {
  }
  boolean ismandatory {
  }
  string maxlength {
  }
  netsuite.generic_customfield_onparentdelete onparentdelete {
  }
  netsuite.generic_standard_field searchcomparefield {
  }
  string searchdefault {
  }
  netsuite.generic_accesslevel_searchlevel searchlevel {
  }
  boolean showhierarchy {
  }
  boolean showinlist {
  }
  string sourcefilterby {
  }
  string sourcefrom {
  }
  string sourcelist {
  }
  boolean isparent {
  }
  string parentsubtab {
  }
  string subtab {
  }
  boolean bodyassemblybuild {
  }
  boolean bodybom {
  }
  boolean bodycustomerpayment {
  }
  boolean bodydeposit {
  }
  boolean bodydepositapplication {
  }
  boolean bodyexpensereport {
  }
  boolean bodyinventoryadjustment {
  }
  boolean bodyfulfillmentrequest {
  }
  boolean bodystorepickup {
  }
  boolean bodyitemfulfillment {
  }
  boolean bodyitemfulfillmentorder {
  }
  boolean bodyitemreceipt {
  }
  boolean bodyitemreceiptorder {
  }
  boolean bodyjournal {
  }
  boolean bodyperiodendjournal {
  }
  boolean bodyopportunity {
  }
  boolean bodyothertransaction {
  }
  boolean bodypaycheck {
  }
  boolean bodypickingticket {
  }
  boolean bodyprintflag {
  }
  boolean bodyprintpackingslip {
  }
  boolean bodyprintstatement {
  }
  boolean bodypurchase {
  }
  boolean bodysale {
  }
  boolean bodystore {
  }
  boolean bodytransferorder {
  }
  boolean bodyvendorpayment {
  }
  boolean bodybtegata {
  }
  string fldsizelabel {
  }
  string bodycustomtransactions {
  }
  netsuite.transactionbodycustomfield_customfieldfilters customfieldfilters {
  }
  netsuite.transactionbodycustomfield_roleaccesses roleaccesses {
  }
  string application_id {
  }
  string internalId {
    _hidden_value = true
  }
  _alias = "Transaction Body Custom Field"
  _important_values = [
    {
      value = "label"
      highlighted = true
      indexed = false
    },
    {
      value = "description"
      highlighted = true
      indexed = false
    },
    {
      value = "scriptid"
      highlighted = true
      indexed = false
    },
    {
      value = "bundle"
      highlighted = true
      indexed = true
    },
  ]
  netsuite.bundle bundle {
  }
}
type netsuite.transactionbodycustomfield_customfieldfilters_customfieldfilter {
  string fldfilter {
    _required = true
  }
  boolean fldfilterchecked {
  }
  netsuite.generic_customfield_fldfiltercomparetype fldfiltercomparetype {
  }
  string fldfiltersel {
  }
  string fldfilterval {
  }
  boolean fldfilternotnull {
  }
  boolean fldfilternull {
  }
  string fldcomparefield {
  }
  number index {
  }
}
type netsuite.transactionbodycustomfield_customfieldfilters {
  "Map<netsuite.transactionbodycustomfield_customfieldfilters_customfieldfilter>" customfieldfilter {
    map_key_field = "fldfilter"
  }
}
type netsuite.transactionbodycustomfield_roleaccesses_roleaccess {
  string role {
    _required = true
  }
  netsuite.generic_accesslevel_searchlevel accesslevel {
    _required = true
  }
  netsuite.generic_accesslevel_searchlevel searchlevel {
    _required = true
  }
}
type netsuite.transactionbodycustomfield_roleaccesses {
  "Map<netsuite.transactionbodycustomfield_roleaccesses_roleaccess>" roleaccess {
    map_key_field = "role"
  }
}
